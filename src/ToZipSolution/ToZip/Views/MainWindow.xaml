<Window x:Class="ToZip.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ToZip.Views"
        xmlns:vm="clr-namespace:ToZip.ViewModels"
        Title="ToZip" Height="500" Width="400">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!--キャンセル用？-->
        <l:InteractionMessageTrigger MessageKey="Error" Messenger="{Binding Messenger, Mode=OneWay}">
            <l:InformationDialogInteractionMessageAction>
            </l:InformationDialogInteractionMessageAction>
        </l:InteractionMessageTrigger>


    </i:Interaction.Triggers>

    <Window.Resources>
        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
        </Style>
        <HierarchicalDataTemplate x:Key="selectTree" DataType="vm:FileSystemViewModel" ItemsSource="{Binding Path=Childs}">
            <Grid>
                <Grid.Resources>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"  Content="{Binding Path=Name}" IsChecked="{Binding Path=IsSelected}" Margin="0,0,10,0" VerticalAlignment="Center"></CheckBox>
                <Button Grid.Column="1" Command="{Binding Path=SelectAllCommand}"  Margin="0,0,10,0">全選択</Button>
                <Button Grid.Column="2" Command="{Binding Path=DeselectAllCommand}">全解除</Button>
            </Grid>

        </HierarchicalDataTemplate>

        <v:BoolReverseConverter x:Key="ReverseConverter"/>
    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" MinWidth="20"/>
            </Grid.ColumnDefinitions>

            <TextBlock>１．圧縮するファイル等が格納されているフォルダを選択してください。</TextBlock>
            <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding Path=SourcePath}" ></TextBox>
            <Button Grid.Column="1" Grid.Row="1"  Command="{Binding Path=SourceSelectCommand}">...</Button>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock>２．圧縮するフォルダを選択してください。</TextBlock>
            <TreeView Grid.Row="1" ItemsSource="{Binding Path=SourceItems}" ItemTemplate="{StaticResource selectTree}" IsEnabled="{Binding Path=IsBusyCompress,Converter={StaticResource ReverseConverter}}"></TreeView>
        </Grid>

        <!--<GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Height="3" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" BorderBrush="Black"  BorderThickness="1" Background="Yellow" ShowsPreview="True"></GridSplitter>-->

        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" MinWidth="20"/>
            </Grid.ColumnDefinitions>

            <TextBlock>３．圧縮ファイルを格納するフォルダを選択してください。</TextBlock>
            <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding Path=DestinationPath}"></TextBox>
            <Button Grid.Column="1" Grid.Row="1"  Command="{Binding Path=DestinationSelectCommand}">...</Button>
        </Grid>

        <WrapPanel Grid.ColumnSpan="10" Grid.Row="4" FlowDirection="RightToLeft">
            <WrapPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="MinWidth" Value="60"/>
                </Style>
            </WrapPanel.Resources>
            <Button Command="{Binding Path=CancelCommand}">中断</Button>
            <Button Command="{Binding Path=CompressCommand}">圧縮開始</Button>
        </WrapPanel>

    </Grid>
</Window>
